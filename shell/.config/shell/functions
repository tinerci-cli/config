#!/bin/sh

# get directory to cd to
fuzzycdhome () {
	FZF_DEFAULT_COMMAND='fd -H . "$HOME"'
	file=$(fzf-tmux)
	cd "$file" 2> /dev/null || cd "$(dirname "$file")" || echo "NO PERMISSION"
}

fuzzycdroot () {
	FZF_DEFAULT_COMMAND='fd -H . /'
	file=$(fzf-tmux)
	cd "$file" 2> /dev/null || cd "$(dirname "$file")" || echo "NO PERMISSION"
}

# cd and edit file
fuzzyed () {
	FZF_DEFAULT_COMMAND='fd -H . /'
	file=$(fzf-tmux)
	if [ ! -w "$file" ]; then
		cd "$(dirname "$file")" && sudoedit "$file" || cd "$file" || return
	else
		cd "$(dirname "$file")" && "$EDITOR" "$file" || cd "$file" || return
	fi
}

fuzzyman () {
	selection=$(apropos . | fzf-tmux)
	kommando="$(echo "$selection" | awk '{print $1}')"
	kapitel="$(echo "$selection" | sed "s/[^0-9.]*//g")"
	man "$kapitel" "$kommando"
}

fuzzyhist () {
	# TODO: without zsh sppecific shit
	 print -z "$(fzf-tmux < $HISTFILE)"
}

#copypath with fuzzy
fuzzycppath () {
	FZF_DEFAULT_COMMAND='fd -H . /'
	fzf-tmux | xclip -selection clipboard
}

#create scripts and edit 'em
scripter () {
	script="$PWD/$1"
	if [ -e "$1" ]; then
		"$EDITOR" "$script"
	else
		/bin/echo -e "#!/bin/bash\n\n" > "$script"
		/bin/chmod +x "$script"
		"$EDITOR" "$script"
	fi
}

#move files with ending $2 from $1 to $3
mvsubs() {
	find "$1" -name "*.$2" -exec mv -it "$3" {} +
}

#convert base 10 to binary
tobinary(){
	n=$(($1))
	bits=""
	sign=""
	if [ "$n" -lt 0 ]; then
		sign=- n=$((-n))
	fi
	while [ "$n" -gt 0 ]; do
		bits="$(( n&1 ))$bits";
		: $(( n >>= 1 ))
	done
	printf "%s\n" "$sign${bits:-0}"
}

#get unix time
unixtime() {
	while true; do date +%s | figlet; sleep 1; clear; done
}

#get unix time in binary
unixtimebinary() {
	while true; do tobinary "$(date +%s)" | figlet; sleep 1; clear; done
}

#convert to webm
towebm() {
	ffmpeg -i "$1" -c:v libvpx-vp9 -crf 30 -b:v 0 -b:a 128k -c:a libopus "$(echo "$1" | tr -d '.')".webm
}

# nvim startup
nvimspeed() {
	nvim --startuptime ~/.config/nvim/startup.log -c exit && tail -100 ~/.config/nvim/startup.log
}

# create a fake/broken document with size $1 and name $2
fake() {
	dd if=/dev/urandom bs=$1 count=1 > $2
}

open() {
	xdg-open $1; sleep 1; clear;
}
